#include "scripts/actorTypes.txt"

void main(void)
{
}

//
// A_RandomItem
//

void A_RandomItem(kActor @actor)
{
    int r = Math::Rand() & 2;
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z + actor.Height();
    kActor @obj;
    
    if(r != 0)
    {
        return;
    }
    
    if((Math::Rand() & 255) >= 128)
    {
        @obj = Game.SpawnActor("Fx_AmmoSpawn", x, y, z, 0, actor.SectorIndex());
    }
    else
    {
        @obj = Game.SpawnActor("Fx_HealthSpawn", x, y, z, 0, actor.SectorIndex());
    }
    
    if(!(obj is null) && (Math::Rand() & 255) >= 128)
    {
        obj.Scale() = 1.0f;
    }
}

//
// A_RandomVaseItem
//

void A_RandomVaseItem(kActor @actor)
{
    int r = Math::Rand() & 7;
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z + actor.Height();
    kActor @obj;
    
    switch(r)
    {
    case 0:
        Game.SpawnActor("AI_Spider", x, y, z, actor.SectorIndex());
        return;
    case 1:
    case 3:
        @obj = Game.SpawnActor("Fx_AmmoSpawn", x, y, z, 0, actor.SectorIndex());
        break;
        
    case 4:
    case 5:
        @obj = Game.SpawnActor("Fx_HealthSpawn", x, y, z, 0, actor.SectorIndex());
        break;
        
    default:
        return;
    }
    
    if(!(obj is null) && (Math::Rand() & 1) != 0)
    {
        obj.Scale() = 1.0f;
    }
}

//
// A_SpawnOrbPickup
//

void A_SpawnOrbPickup(kActor @actor)
{
    kActor @orb;
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z;
    
    switch(actor.Type())
    {
    case AT_MISC20: // Fx_HealthSpawn
        @orb = Game.SpawnActor("Item_Health", x, y, z, 0, actor.SectorIndex());
        break;
        
    case AT_MISC21: // Fx_AmmoSpawn
        @orb = Game.SpawnActor("Item_Ammo", x, y, z, 0, actor.SectorIndex());
        break;
        
    default:
        return;
    }
    
    if(orb is null)
    {
        return;
    }
    
    orb.Scale() = actor.Scale();
}

//
// A_ThrowAmunBomb
//

float bombChargeThrow = 16.0f;

void A_ThrowAmunBomb(kActor @actor)
{
    float cp = Math::Cos(actor.Pitch());
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z + 64.0f;
    kVec3 dir;
    kActor @bomb;
    
    dir.x = Math::Sin(actor.Yaw()) * cp;
    dir.y = Math::Cos(actor.Yaw()) * cp;
    dir.z = -Math::Sin(actor.Pitch());
    
    x += dir.x * actor.Radius();
    y += dir.y * actor.Radius();
    z += dir.z * actor.Radius();
    
    @bomb = Game.SpawnActor("Proj_AmunBomb", x, y, z, actor.Yaw(), actor.SectorIndex());
    
    if(bomb is null)
    {
        return;
    }
    
    bomb.Velocity() = (dir * bombChargeThrow);
    bomb.Velocity().z = 8.0f + ((bombChargeThrow + 8.0f) * dir.z);
    
    bombChargeThrow = 16.0f;
}

//
// A_ChargeBombThrow
//

void A_ChargeBombThrow(kActor @actor)
{
    bombChargeThrow += 0.2f;
    
    if(bombChargeThrow > 40.0f)
    {
        bombChargeThrow = 40.0f;
    }
}

//
// A_CStaffExplode
//

void A_CStaffExplode(kActor @actor)
{
    float x = actor.Origin().x + (Math::RandCFloat() * 32.0f);
    float y = actor.Origin().y + (Math::RandCFloat() * 32.0f);
    float z = actor.Origin().z + (Math::RandCFloat() * 32.0f);
    kActor @puff;
    
    @puff = Game.SpawnActor("Fx_GreenCobraExplode", x, y, z, 0, actor.SectorIndex());
    
    if(puff is null)
    {
        return;
    }
    
    puff.PlaySound("sounds/pbexplode.wav");
}

//
// A_SetupCobraJoints
//

void A_SetupCobraJoints(kActor @actor)
{
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z;
    kActor @j1;
    kActor @j2;
    kActor @j3;
    kActor @j4;
    kActor @j5;
    
    @j1 = Game.SpawnActor("Fx_GreenCobraJoint", x, y, z, 0, actor.SectorIndex());
    @j2 = Game.SpawnActor("Fx_GreenCobraJoint", x, y, z, 0, actor.SectorIndex());
    @j3 = Game.SpawnActor("Fx_GreenCobraJoint", x, y, z, 0, actor.SectorIndex());
    @j4 = Game.SpawnActor("Fx_GreenCobraJoint", x, y, z, 0, actor.SectorIndex());
    @j5 = Game.SpawnActor("Fx_GreenCobraJoint", x, y, z, 0, actor.SectorIndex());
    
    j1.SetTarget(actor);
    j2.SetTarget(j1);
    j3.SetTarget(j2);
    j4.SetTarget(j3);
    j5.SetTarget(j4);
    
    j2.Scale() = 0.875f;
    j3.Scale() = 0.75f;
    j4.Scale() = 0.625f;
    j5.Scale() = 0.5f;
    
    actor.SetTaggedActor(j5);
}

//
// A_UpdateCobraJoints
//

void A_UpdateCobraJoints(kActor @actor)
{
    if(actor.GetTarget() is null)
    {
        return;
    }
    
    actor.Origin().Lerp(actor.GetTarget().Origin(), 0.5f);
    actor.SetSector(actor.GetTarget().SectorIndex());
}

//
// A_DestroyCobraJoints
//

void A_DestroyCobraJoints(kActor @actor)
{
    kActor @j1;
    kActor @j2;
    kActor @j3;
    kActor @j4;
    kActor @j5;
    
    @j5 = actor.GetTaggedActor();
    @j4 = j5.GetTarget();
    @j3 = j4.GetTarget();
    @j2 = j3.GetTarget();
    @j1 = j2.GetTarget();
    
    j1.Remove();
    j2.Remove();
    j3.Remove();
    j4.Remove();
    j5.Remove();
}

//
// A_CobraSlither
//

void A_CobraSlither(kActor @actor)
{
    float t = actor.GameTicks();
    
    kQuat rotation = kQuat(actor.Pitch(), -1, 0, 0) * kQuat(actor.Yaw(), 0, 0, -1);
    
    actor.Velocity() = (kVec3(0, 8, 0) * rotation);
    actor.Velocity() -= (kVec3(4 * Math::Cos(t * 0.25f), 0, 0) * rotation);
}

//
// A_AnubisDeath
//

void A_AnubisDeath(kActor @actor)
{
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z + 64.0f;
    kActor @gib = Game.SpawnActor("Fx_Gibs01", x, y, z, actor.Yaw(), actor.SectorIndex());
    
    if(!(gib is null))
    {
        gib.Scale() = actor.Scale();
    }
    
    if((Math::Rand() & 1) == 0)
    {
        actor.PlaySound("sounds/anubisdeath01.wav");
    }
    else
    {
        actor.PlaySound("sounds/anubisdeath02.wav");
    }
}

//
// A_SpiderLeap
//

void A_SpiderLeap(kActor @actor)
{
    if(actor.GetTarget() is null)
    {
        return;
    }
    
    kVec3 dir = (actor.GetTarget().Origin() - actor.Origin()).Normalize();
    
    actor.PlaySound("sounds/spidjump.wav");
    
    actor.Velocity().x = dir.x * 4;
    actor.Velocity().y = dir.y * 4;
    actor.Velocity().z = 15.0f;
}

//
// A_SpiderCheckGround
//

void A_SpiderCheckGround(kActor @actor)
{
    if((actor.Origin().z + actor.Velocity().z) <= actor.FloorHeight())
    {
        actor.ChangeAnim("monsters/spider_base");
    }
}

//
// A_SpiderDeath
//

void A_SpiderDeath(kActor @actor)
{
    float x = actor.Origin().x;
    float y = actor.Origin().y;
    float z = actor.Origin().z;
    kActor @gib = Game.SpawnActor("Fx_Gibs01", x, y, z, actor.Yaw(), actor.SectorIndex());
    
    if(!(gib is null))
    {
        gib.Scale() = actor.Scale();
    }
    
    actor.PlaySound("sounds/spiddeath.wav");
}
